apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "me.tankery.app.helloswig"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "hello" // Name of C++ module (i.e. libhello)
            cFlags "-std=c++11 -fexceptions -frtti" // Add provisions to allow C++11 functionality
            stl "gnustl_shared" // Which STL library to use: gnustl or stlport
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.jakewharton:butterknife:6.1.0'
}

// Location of where to store the jni wrapped files
def coreWrapperDir = new File("${projectDir}/src/main/java/me/tankery/app/helloswig/jni")
def coreWrapperPackage = "me.tankery.app.helloswig.jni"

task createCoreWrapperDir {
    coreWrapperDir.mkdirs()
}

// For this to work, it's assumed SWIG is installed
// TODO: This only works when called from Command Line (gradlew runSwig)
task runSwig(dependsOn: ['createCoreWrapperDir']) {

    def swigInterfaces = fileTree(dir: 'src/main/jni', include: ['*.i'])

    swigInterfaces.each {File file ->
        println "SWIG file: " + file.absolutePath
        def cmd = "${project.SWIG_PATH} -c++ -java -package ${coreWrapperPackage} -outdir ${coreWrapperDir.absolutePath} ${file.absolutePath}"
        def proc = cmd.execute()
        proc.waitFor()
    }

}

preBuild.dependsOn runSwig
